---
apiVersion: v1
kind: Secret
metadata:
  name: auth-db-secret
  namespace: default
type: Opaque
data:
  MONGO_INITDB_ROOT_USERNAME: cm9vdA== # "root"
  MONGO_INITDB_ROOT_PASSWORD: ZXhhbXBsZQ== # "example"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-data-pv
spec:
  capacity:
    storage: 15Gi
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  storageClassName: local-storage
  hostPath:
    path: /Users/nimatullahrazmjo/mongodb-data # Ensure this path exists on the node
    type: DirectoryOrCreate # Creates the directory if it doesn't exist

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: auth-db
  namespace: default
spec:
  serviceName: "auth-db"
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
        - name: mongodb
          image: mongo:6
          ports:
            - containerPort: 27017
              name: mongo
          envFrom:
            - secretRef:
                name: auth-db-secret
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          readinessProbe:
            exec:
              command:
                - "mongosh"
                - "--eval"
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: ["ReadWriteOnce"]
        volumeMode: Filesystem
        storageClassName: local-storage
        resources:
          requests:
            storage: 15Gi

---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: auth-db
  ports:
    - name: mongo
      port: 27017
      targetPort: mongo
